#include <stdint.h>
#include <stdio.h>
#include "arm_math.h"
#include "vanilla_weight.h"
#include "arm_nnfunctions.h"

#ifdef _RTE_
#include "RTE_Components.h"
#ifdef RTE_Compiler_EventRecorder
#include "EventRecorder.h"
#endif
#endif

#include "vanilla_input_per_proc.h"
#include "vanilla_out.h"
#include "mbed.h"

Serial pc( USBTX , USBRX );
static q7_t conv1_wt[200] = CONV1_WT;
static q7_t conv1_bias[8] = CONV1_BIAS;

//static q7_t add1_wt[8] = ADD1;

//static q7_t conv2_wt[8*5*5*16] = CONV2_WT;
//static q7_t conv2_bias[16] = CONV2_BIAS;

//static q7_t add2_wt[16] = ADD2;

//static q7_t add3_wt[10] = ADD3;

q7_t output_data[10];
q7_t col_buffer[2*5*5*32*2];
q7_t scratch_buffer[8*28*28];
q7_t scratch_buffer2[8*28*28];

  uint8_t image_data[28*28] = {0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,
      2,   1,   0,   6,   0,   0,   7,   0,   0,  10,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   6,   0,   0,   4,
      0,   0,   5,   0,   1,   1,   8,   0,   2,   2,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   4,   4,   0,   4,   0,
      0,   4,   0,   0,  10,   0,   0,   0,  10,   0,   2,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   6,   0,   0,   5,   2,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   6,   0,   8,   5,  13,
     17,   8,  38,  90,  89,  18,   2,   0,   0,   0,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  75, 127, 125,
    126, 122, 126, 126, 127,  22,   3,   0,   2,   0,   4,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   4,  36, 102, 127, 119,
    122, 127, 127, 126, 124, 100,  99,  28,   0,  10,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0, 109, 127, 120, 127,
    124, 125, 126, 125, 127, 127, 121, 112,  24,   0,   6,   0,   0,
      0,   0,
     0,   0,   0,   1,   2,   1,   1,   0,   0,  32, 114, 127, 127,
    122,  60,  17,  20,  55, 125, 127, 124,  62,  10,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   6,   0,  31,  52,  56,
     58,  17,   0,   0,   0, 100, 122, 127, 127,   0,   6,   0,   0,
      0,   0,
     1,   0,   0,   0,   0,   0,   0,   1,   0,   0,   1,   2,   0,
      6,   0,   4,   3,   0,  38, 122, 127, 127,   2,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   1,   2,   2,   2,   0,   7,   0,   0,   0,
      4,   0,   1,   0,   0,  17, 127, 127, 126,   5,   5,   0,   0,
      0,   0,
     0,   0,   0,   1,   2,   1,   0,   0,   2,   1,   0,   6,   6,
      0,   0,   0,   3,   6,  50, 127, 127, 124,   8,   6,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,
      3,   6,   0,   0,   8,  92, 124, 127, 122,   6,   0,   0,   0,
      0,   0,
     2,   1,   0,   0,   0,   0,   1,   2,   2,   0,   6,   0,  26,
     47,  42,   2,   2,  12, 123, 123, 127, 104,   0,   4,   0,   0,
      0,   0,
     2,   0,   0,   0,   0,   4,   8,  10,  50,  52,  91,  94, 118,
    126, 126,  96,  95, 114, 122, 126, 105,   9,   4,   0,   0,   0,
      0,   0,
     0,   2,   0,   0,  16,  54,  92, 124, 127, 121, 127, 122, 127,
    127, 121, 126, 127, 120, 127, 127, 109,  62,   4,   0,   0,   0,
      0,   0,
     1,   0,   0,   0,  64, 127, 118, 127, 127, 124, 114, 106, 121,
    125, 127, 127, 124, 127, 126, 124, 127, 122,  85,   6,   0,   0,
      0,   0,
     0,   6,   0,   4, 126, 127, 127, 116, 101,  42,   0,  26,  98,
    119, 127, 114, 119,  71,  54,  96, 127, 120, 127,  90,   0,   0,
      0,   0,
     3,   0,  11,   0, 122, 122, 127, 127, 108, 118, 113, 106, 122,
    126, 127, 120,  38,   0,   0,  10,  91, 124, 120, 122,   0,   0,
      0,   0,
     0,   0,   0,   2,  82, 126, 127, 122, 127, 121, 126, 125, 127,
     98,  54,  30,   0,   9,   1,   3,   0,  27, 127,  79,   0,   0,
      0,   0,
     0,  12,   0,   0,   3,  17,  84,  97,  88,  92,  82,  22,   1,
      5,   3,   3,   0,   0,   2,   0,   0,   0,   7,   1,   0,   0,
      0,   0,
     5,   0,   7,   0,   6,   0,   2,   0,   0,   0,   3,   0,   4,
      0,   0,   0,   4,   0,   5,   0,   2,   0,   0,   5,   0,   0,
      0,   0,
     0,   7,   0,   2,   0,   0,  12,   0,   0,   4,   0,   0,   4,
      0,   6,   0,   0,   0,   0,   1,   0,   0,   4,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0
};

void vanilla_main(bool input_pre_proc){
  #ifdef RTE_Compiler_EventRecorder
    EventRecorderInitialize (EventRecordAll, 1);
  #endif

  printf("start execution\n");
  q7_t *img_buffer1 = scratch_buffer;
  q7_t *img_buffer2 = scratch_buffer;

  if(input_pre_proc){
    per_processing(image_data , img_buffer2);
  }

  arm_convolve_HWC_q7_fast( img_buffer2,28,1,conv1_wt,8,5,0,1,conv1_bias,0,9,img_buffer1,28,(q15_t *)col_buffer,NULL );

  //Add(img_buffer1,add1_wt);
/*
  arm_relu_q7( img_buffer2,8 * 28 * 28 );

  arm_maxpool_q7_HWC( img_buffer2,28,8,2,0,2,14,NULL,img_buffer1 );

  arm_convolve_HWC_q7_basic( img_buffer1,14,8,conv2_wt,16,5,0,1,conv2_bias,left_shift of bias,right_shift of output,img_buffer2,14,(q15_t *)col_buffer,NULL );

  Add(img_buffer2,add2_wt);

  arm_relu_q7( img_buffer1,16 * 14 * 14 );

  arm_maxpool_q7_HWC( img_buffer1,14,16,3,0,3,4,NULL,img_buffer2 );

  Add(img_buffer2,add3_wt);

  for(int i = 0; i < 10 ; i++){
    printf( "%d: %d\n", i , output_data[i] );
  }
  */
}
